/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/

ext.title = "Sprotty for Xtext"
description = "Integration of sprotty with Xtext language servers"

dependencies {
	api project(':org.eclipse.sprotty.server')
	api "org.eclipse.xtext:org.eclipse.xtext.ide:${versions.xtext}"
	api "org.eclipse.lsp4j:org.eclipse.lsp4j:${versions.lsp4j}"
	testImplementation "org.eclipse.xtext:org.eclipse.xtext.testing:${versions.xtext}"
	testImplementation "junit:junit:${versions.junit}"
}

sourceSets.test.java.srcDir 'src/test/xtext-gen'
sourceSets.test.resources.srcDir 'src/test/xtext-gen'

configurations {
	mwe2 {
		extendsFrom api
	}
	// Use newer version of Guice at runtime to make sure we get proper error messages
	testRuntimeClasspath.resolutionStrategy {
		eachDependency {
			if (requested.group == 'com.google.inject' && requested.name == 'guice')
				useVersion(versions.guice)
		}
	}
}

dependencies {
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.common.types:${versions.xtext}"
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.xtext.generator:${versions.xtext}"
	mwe2 "org.eclipse.xtext:xtext-antlr-generator:2.1.1"
	mwe2 "org.eclipse.emf:org.eclipse.emf.mwe2.launch:2.9.0.201605261059"
}

task generateTestLanguage(type: JavaExec) {
	mainClass = 'org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher'
	classpath = configurations.mwe2
	def workflowFile = 'src/test/java/org/eclipse/sprotty/xtext/testlanguage/GenerateTestLanguage.mwe2'
	def grammarFile = 'src/test/java/org/eclipse/sprotty/xtext/testlanguage/TestLanguage.xtext'
	inputs.file workflowFile
	inputs.file grammarFile
	outputs.dir 'src/test/xtext-gen'
	args += workflowFile
	args += '-p'
	args += "rootPath=${projectDir}/.."
}

generateTestXtext.dependsOn(generateTestLanguage)
processTestResources.dependsOn(generateTestLanguage)
clean.dependsOn(cleanGenerateTestLanguage)
eclipse.classpath.plusConfigurations += [configurations.mwe2]
